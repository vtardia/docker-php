#!/usr/bin/env php
<?php
declare(ticks = 1);

$terminate = false;
$logFile = 'php://stdout';
/* $logFile = '/var/log/worker/activity.log'; */

if (function_exists('pcntl_signal')) {
    pcntl_signal(SIGTERM, 'onSignal');
    pcntl_signal(SIGINT, 'onSignal');
    pcntl_signal(SIGQUIT, 'onSignal');
}

/**
 * Manage process signals
 *
 * @param  int $signal System signal
 * @return void
 */
function onSignal($signal)
{
    global $terminate;
    $signals = [SIGTERM => 'SIGTERM', SIGINT => 'SIGINT', SIGQUIT => 'SIGQUIT'];
    switch ($signal) {
        case SIGTERM:
            // shutdown taks, or 'kill <pid>'
        case SIGINT:
            // ctrl+c pressed
        case SIGQUIT:
            $message = sprintf('Received %s signal, will exit after current job finishes', $signals[$signal]);
            error_log($message . "\n", 3, $logFile);
            $terminate = true;
            return;
    }
}

while (!$terminate) {
    error_log("Working hard...\n", 3, $logFile);
    sleep(5);
}
error_log("Terminating...\n", 3, $logFile);
exit(0);

